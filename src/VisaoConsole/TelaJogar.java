/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package VisaoConsole;

import DAO.PalavraDAO;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;

/**
 *
 * @author santo
 */
public class TelaJogar extends javax.swing.JFrame {

    /**
     * Creates new form TelaJogar
     */
    
    private int idAleatorio, i, tentativas = 5, pontuacao = 0;
    private ArrayList<String> letras;
    private ArrayList<String> tracos;
    private StringBuilder stringBuilder = new StringBuilder();
    private String letra;
    private final String dificuldade;
    private final String nickname;
    
    
    public TelaJogar(String nick) throws SQLException {
        nickname = nick;
        System.out.println(nickname);
        Connection connection;
        connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/jogo_da_forca?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=America/Sao_Paulo", "root", "");
        PalavraDAO palavraDAO = new PalavraDAO(connection);
        
        // Método que retorna o id aleatório
        try {
            idAleatorio = palavraDAO.getIdAleatorio();
            System.out.println("ID aleatório: " + idAleatorio);
        } catch (SQLException e) {
            // Lida com a exceção SQLException aqui
            e.printStackTrace();
        }
        // Método que retorna a palavra aleatória
        try {
            letras = palavraDAO.recuperar(idAleatorio);
            System.out.println("Palavra recuperado = " + letras);
            tracos = new ArrayList<>(); // Inicializa o ArrayList tracos
            while(i<letras.size()){
                tracos.add("_ ");
                i++;
            }
        } catch (SQLException e) {
            // Lida com a exceção SQLException aqui
            e.printStackTrace();
        }
        // Lê o arraylist para transformar em String
        for (String traco : tracos) {
            stringBuilder.append(traco);
        }
        
        // Inicia os components do JFrame
        initComponents();
        
        // Ativa o enter para o btEnviar
        textLetra.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                btEnviar.doClick(); // Aciona o botão "Enviar"
            }
        });

        // Pega a dificuldade da palavra para calcular a pontuação
        dificuldade = palavraDAO.recuperarDificuldade(idAleatorio);
        labelDificuldade.setText(dificuldade);
       
        // Adicionar o DocumentFilter ao textLetra para que não possa digitar mais de um caracter e nem caracteres diferente de a-z
        AbstractDocument doc = (AbstractDocument) textLetra.getDocument();
        doc.setDocumentFilter(new DocumentFilter() {
            @Override
            public void replace(FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
                int newLength = fb.getDocument().getLength() - length + text.length();
                // Valida se o texto inserido é uma letra e tem só um caracter
                if (text.matches("[a-zA-Z]") && newLength <= 1) {
                    // Permite a substituição do texto
                    super.replace(fb, offset, length, text, attrs);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labelPalavraSecreta = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        labelTentativas = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        textLetra = new javax.swing.JTextField();
        btEnviar = new javax.swing.JButton();
        btDesistir = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        labelPontuacao = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        labelDificuldade = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelPalavraSecreta.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        labelPalavraSecreta.setText(stringBuilder.toString());

        jLabel1.setText("Nº Tentativas:");

        labelTentativas.setText("0");

        jLabel2.setText("Digite uma letra:");

        textLetra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textLetraActionPerformed(evt);
            }
        });

        btEnviar.setText("Enviar");
        btEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEnviarActionPerformed(evt);
            }
        });

        btDesistir.setText("Desistir");
        btDesistir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDesistirActionPerformed(evt);
            }
        });

        jLabel3.setText("Pontuação:");

        labelPontuacao.setText("0");

        jLabel4.setText("Dificuldade:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(146, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btDesistir)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(labelPalavraSecreta)
                        .addGap(139, 139, 139))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btEnviar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textLetra, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelTentativas)
                                    .addComponent(labelPontuacao)
                                    .addComponent(labelDificuldade))))
                        .addGap(157, 157, 157))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btDesistir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(labelPalavraSecreta)
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(labelDificuldade))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(labelPontuacao))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(labelTentativas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textLetra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btEnviar)
                .addGap(43, 43, 43))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btDesistirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDesistirActionPerformed
        dispose(); // Joga a tela fora
    }//GEN-LAST:event_btDesistirActionPerformed

    private void btEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEnviarActionPerformed
        letra = textLetra.getText(); // Obter a letra digitada pelo usuário  
        Connection connection;
        try {
            connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/jogo_da_forca?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=America/Sao_Paulo", "root", "");
            PalavraDAO palavraDAO = new PalavraDAO(connection);
            
            if(tentativas > 0){
                if(!letra.equals("")){

                    // Chamar a função substituirPorLetra para atualizar tracos
                    if(palavraDAO.substituirPorLetra(letras, tracos, letra)){;                
                        // Atualizar o texto do labelPalavraSecreta
                        StringBuilder stringBuilder = new StringBuilder();
                        for (String elemento : tracos) {
                            stringBuilder.append(elemento.toUpperCase());
                        }
                        labelPalavraSecreta.setText(stringBuilder.toString());
                        if(palavraDAO.ganhou(tracos, letras)){
                            // Controla a pontuação pela dificuldade da palavra
                            if(dificuldade.equals("Facil")){
                                pontuacao = tentativas + 10;
                            }
                            else if(dificuldade.equals("Medio")){
                                pontuacao = tentativas + 15;
                            }
                            else{
                                pontuacao = tentativas + 20;
                            }
                            // Chama o método para alterar a pontuação
                            System.out.println(nickname);
                            palavraDAO.alteraPontuacao(nickname, pontuacao);

                            // Faz o OK do dialog voltar pro menu 
                            Object[] options = {"Menu Inicial"};
                            int result = JOptionPane.showOptionDialog(this, "Parabéns!!!\nVocê venceu e fez "+ pontuacao + " pontos.", "Vitória", JOptionPane.DEFAULT_OPTION, JOptionPane.DEFAULT_OPTION, null, options, options[0]);
                            if(result == JOptionPane.OK_OPTION){
                                dispose();
                            }

                        }
                    }
                    else{
                        JOptionPane.showMessageDialog(this, "Tente novamente!");
                        tentativas--;
                    }
                }
                else{
                    JOptionPane.showMessageDialog(this, "Digite uma letra!");
                }
            }
            else{
                // Faz o OK do dialog voltar pro menu 
                Object[] options = {"Menu Inicial"};
                int result = JOptionPane.showOptionDialog(this, "Suas tentativas acabaram 💔", "Derrota", JOptionPane.DEFAULT_OPTION, JOptionPane.DEFAULT_OPTION, null, options, options[0]);
                if(result == JOptionPane.OK_OPTION){
                    dispose();
                }                
            }
        }catch (SQLException ex) {
            Logger.getLogger(TelaJogar.class.getName()).log(Level.SEVERE, null, ex);
        }
        // Muda o texto para quantidade de tentativas atual
        labelTentativas.setText(String.valueOf(tentativas));
        // Muda o texto para pontuação atual
        labelPontuacao.setText(String.valueOf(pontuacao));
        // Apaga a letra do textLetra para o usuário inserir a nova letra TODO: não está alterando
        textLetra.setText(null);
    }//GEN-LAST:event_btEnviarActionPerformed

    private void textLetraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textLetraActionPerformed
        // Criado sem querer
    }//GEN-LAST:event_textLetraActionPerformed
    
    
    
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(TelaJogar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(TelaJogar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(TelaJogar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(TelaJogar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                try {
//                    new TelaJogar().setVisible(true);
//                } catch (SQLException ex) {
//                    Logger.getLogger(TelaJogar.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btDesistir;
    private javax.swing.JButton btEnviar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelDificuldade;
    private javax.swing.JLabel labelPalavraSecreta;
    private javax.swing.JLabel labelPontuacao;
    private javax.swing.JLabel labelTentativas;
    public javax.swing.JTextField textLetra;
    // End of variables declaration//GEN-END:variables
}
